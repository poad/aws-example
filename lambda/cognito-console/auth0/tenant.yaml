rules: []
rulesConfigs: []
hooks: []
pages: []
resourceServers:
  - name: SignOut
    identifier: 'https://p1z58bcqdc.execute-api.us-west-2.amazonaws.com/signout'
    allow_offline_access: false
    signing_alg: RS256
    skip_consent_for_verifiable_first_party_clients: true
    token_lifetime: 86400
    token_lifetime_for_web: 7200
  - name: UserInfo
    identifier: 'https://p1z58bcqdc.execute-api.us-west-2.amazonaws.com/userInfo'
    allow_offline_access: false
    signing_alg: RS256
    skip_consent_for_verifiable_first_party_clients: true
    token_lifetime: 86400
    token_lifetime_for_web: 7200
clients:
  - name: Default App
    addons: {}
    allowed_clients: []
    allowed_logout_urls:
      - 'https://poad-dev-example-console.auth.us-west-2.amazoncognito.com/logout'
    app_type: native
    callbacks: []
    client_aliases: []
    cross_origin_auth: false
    custom_login_page_on: true
    grant_types:
      - authorization_code
      - implicit
      - refresh_token
      - 'urn:ietf:params:oauth:grant-type:device_code'
      - password
      - 'http://auth0.com/oauth/grant-type/password-realm'
      - 'http://auth0.com/oauth/grant-type/mfa-oob'
      - 'http://auth0.com/oauth/grant-type/mfa-otp'
      - 'http://auth0.com/oauth/grant-type/mfa-recovery-code'
    initiate_login_uri: 'https://poad-dev-example-console.auth.us-west-2.amazoncognito.com/login'
    is_first_party: true
    is_token_endpoint_ip_header_trusted: false
    jwt_configuration:
      alg: RS256
      lifetime_in_seconds: 36000
      secret_encoded: false
    native_social_login:
      apple:
        enabled: false
      facebook:
        enabled: false
    oidc_conformant: true
    refresh_token:
      expiration_type: non-expiring
      idle_token_lifetime: 1296000
      infinite_idle_token_lifetime: true
      infinite_token_lifetime: true
      leeway: 0
      token_lifetime: 2592000
      rotation_type: non-rotating
    sso_disabled: false
    token_endpoint_auth_method: none
  - name: SAML Identity Provider for Cognito
    addons:
      samlp:
        audience: 'urn:amazon:cognito:sp:us-west-2_5kj5d0o3S'
        nameIdentifierFormat: 'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent'
        nameIdentifierProbes:
          - 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'
    allowed_clients: []
    app_type: native
    callbacks:
      - >-
        https://poad-dev-example-console.auth.us-west-2.amazoncognito.com/saml2/idpresponse
    client_aliases: []
    cross_origin_auth: false
    custom_login_page_on: true
    grant_types:
      - authorization_code
      - implicit
      - refresh_token
    is_first_party: true
    is_token_endpoint_ip_header_trusted: false
    jwt_configuration:
      alg: RS256
      lifetime_in_seconds: 36000
      secret_encoded: false
    native_social_login:
      apple:
        enabled: false
      facebook:
        enabled: false
    oidc_conformant: true
    refresh_token:
      expiration_type: non-expiring
      leeway: 0
      infinite_token_lifetime: true
      infinite_idle_token_lifetime: true
      token_lifetime: 2592000
      idle_token_lifetime: 1296000
      rotation_type: non-rotating
    sso_disabled: false
    token_endpoint_auth_method: none
  - name: SignOut (Test Application)
    app_type: non_interactive
    cross_origin_auth: false
    custom_login_page_on: true
    grant_types:
      - client_credentials
    is_first_party: true
    is_token_endpoint_ip_header_trusted: false
    jwt_configuration:
      alg: RS256
      lifetime_in_seconds: 36000
      secret_encoded: false
    oidc_conformant: true
    refresh_token:
      expiration_type: non-expiring
      leeway: 0
      infinite_token_lifetime: true
      infinite_idle_token_lifetime: true
      token_lifetime: 31557600
      idle_token_lifetime: 2592000
      rotation_type: non-rotating
    sso_disabled: false
    token_endpoint_auth_method: client_secret_post
  - name: UserInfo (Test Application)
    app_type: non_interactive
    cross_origin_auth: false
    custom_login_page_on: true
    grant_types:
      - client_credentials
    is_first_party: true
    is_token_endpoint_ip_header_trusted: false
    jwt_configuration:
      alg: RS256
      lifetime_in_seconds: 36000
      secret_encoded: false
    oidc_conformant: true
    refresh_token:
      expiration_type: non-expiring
      leeway: 0
      infinite_token_lifetime: true
      infinite_idle_token_lifetime: true
      token_lifetime: 31557600
      idle_token_lifetime: 2592000
      rotation_type: non-rotating
    sso_disabled: false
    token_endpoint_auth_method: client_secret_post
  - name: auth0-deploy-cli-extension
    app_type: non_interactive
    cross_origin_auth: false
    custom_login_page_on: true
    grant_types:
      - client_credentials
    is_first_party: true
    is_token_endpoint_ip_header_trusted: false
    jwt_configuration:
      alg: RS256
      lifetime_in_seconds: 36000
      secret_encoded: false
    oidc_conformant: true
    refresh_token:
      expiration_type: non-expiring
      leeway: 0
      infinite_token_lifetime: true
      infinite_idle_token_lifetime: true
      token_lifetime: 31557600
      idle_token_lifetime: 2592000
      rotation_type: non-rotating
    sso_disabled: false
    token_endpoint_auth_method: client_secret_post
databases:
  - name: Username-Password-Authentication
    strategy: auth0
    enabled_clients:
      - auth0-deploy-cli-extension
      - SAML Identity Provider for Cognito
      - SignOut (Test Application)
      - UserInfo (Test Application)
    is_domain_connection: false
    options:
      mfa:
        active: true
        return_enroll_settings: true
      validation:
        username:
          max: 15
          min: 1
      import_mode: false
      customScripts:
        change_password: ./databases/Username-Password-Authentication/change_password.js
        create: ./databases/Username-Password-Authentication/create.js
        delete: ./databases/Username-Password-Authentication/delete.js
        get_user: ./databases/Username-Password-Authentication/get_user.js
        login: ./databases/Username-Password-Authentication/login.js
        verify: ./databases/Username-Password-Authentication/verify.js
      passwordPolicy: good
      password_history:
        size: 5
        enable: false
      strategy_version: 2
      requires_username: true
      password_dictionary:
        enable: false
        dictionary: []
      brute_force_protection: true
      password_no_personal_info:
        enable: false
      password_complexity_options:
        min_length: 8
      enabledDatabaseCustomization: false
    realms:
      - Username-Password-Authentication
connections:
  - name: AWS-Cognito
    strategy: oauth2
    enabled_clients:
      - auth0-deploy-cli-extension
      - Default App
      - SignOut (Test Application)
      - UserInfo (Test Application)
    is_domain_connection: false
    options:
      scope: openid email profile
      scripts:
        fetchUserProfile: |-
          function(accessToken, ctx, cb) {
            request.get('https://poad-dev-example-console.auth.us-west-2.amazoncognito.com/oauth2/userInfo', {
              headers: {
                'Authorization': 'Bearer ' + accessToken
              }
            }, function(e, r, b) {
              if (e) return cb(e);
              if (r.statusCode !== 200) return cb(new Error('StatusCode: ' + r.statusCode));
              var profile = JSON.parse(b);
              cb(null, {
                user_id: profile.sub,
                email: profile.email,
              });
            });
          }
      tokenURL: >-
        https://poad-dev-example-console.auth.us-west-2.amazoncognito.com/oauth2/token
      client_id: 3kufbc6o3i9iij1ke0k9h95g0b
      client_secret: 5bveb9b299ajomo6gad6dvlhkmm7mpacc6mgrpf2q4e0snsbv6b
      authorizationURL: >-
        https://poad-dev-example-console.auth.us-west-2.amazoncognito.com/oauth2/authorize
  - name: google-oauth2
    strategy: google-oauth2
    enabled_clients: []
    is_domain_connection: false
    options:
      email: true
      scope:
        - email
        - profile
      profile: true
tenant:
  enabled_locales:
    - ja
  flags:
    enable_adfs_waad_email_verification: true
    enable_dynamic_client_registration: true
    universal_login: true
    revoke_refresh_token_grant: true
    disable_clickjack_protection_headers: false
emailProvider: {}
emailTemplates: []
clientGrants:
  - client_id: SignOut (Test Application)
    audience: 'https://p1z58bcqdc.execute-api.us-west-2.amazonaws.com/signout'
    scope: []
  - client_id: UserInfo (Test Application)
    audience: 'https://p1z58bcqdc.execute-api.us-west-2.amazonaws.com/signout'
    scope: []
  - client_id: UserInfo (Test Application)
    audience: 'https://p1z58bcqdc.execute-api.us-west-2.amazonaws.com/userInfo'
    scope: []
guardianFactors:
  - name: duo
    enabled: false
  - name: email
    enabled: false
  - name: otp
    enabled: false
  - name: push-notification
    enabled: false
  - name: sms
    enabled: false
  - name: webauthn-platform
    enabled: false
  - name: webauthn-roaming
    enabled: false
guardianFactorProviders: []
guardianFactorTemplates: []
guardianPolicies:
  policies: []
guardianPhoneFactorSelectedProvider:
  provider: auth0
guardianPhoneFactorMessageTypes:
  message_types: []
roles: []
branding: {}
prompts:
  universal_login_experience: new
migrations: {}
