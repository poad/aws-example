AWSTemplateFormatVersion: '2010-09-09'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label: 
          default: "ECS Configuration"
        Parameters: 
          - ClusterName
          - ECSServiceName
          - ECSTaskDesiredCount
          - ECSServiceSecurityGroupName
          - ECSTaskFamily
          - ECSImageName
          - ECSTaskCPUUnit
          - ECSTaskMemory
          - ECSLogGroupName
          - ContainerName
          - ECSContainerPort
          - ECSTaskExecutionRoleName
          - ECSTaskRoleName

      -
        Label: 
          default: "ALB Configuration"
        Parameters: 
          - AlbName
          - AlbScheme
          - Port
          - Protocol
          - AlbTargetGroupName
          - VpcId
          - AlbSecurityGroupName
          - Subnets

Parameters:
  ClusterName:
    Type: String
    Default: test
  AlbName:
    Type: String
    Default: test
  AlbScheme:
    Type: String
    Default: internet-facing
    AllowedValues:
      - internal
      - internet-facing
  Port:
    Type: Number
    Default: 80
  ECSContainerPort:
    Type: Number
    Default: 80
  Protocol:
    Type: String
    Default: HTTP
    AllowedValues:
      - HTTP
      - HTTPS
  AlbTargetGroupName:
    Type: String
    Default: test-alb-tg
  ECSLogGroupName:
    Type: String
    Default: test
  ECSTaskFamily:
    Type: String
    Default: test
  ECSImageName:
    Type: String
    Default: nginx:alpine
  ECSTaskExecutionRoleName:
    Type: String
    Default: ecs-execution-task-role
  ECSTaskRoleName:
    Type: String
    Default: ecs-task-role
  ECSTaskCPUUnit:
    AllowedValues:
      - 256
      - 512
      - 1024
      - 2048
      - 4096 
    Type: String
    Default: 256
  ECSTaskMemory:
    AllowedValues:
      - 256
      - 512
      - 1024
      - 2048
      - 4096
    Type: String
    Default: 512
  ECSServiceSecurityGroupName:
    Type: String  
    Default: test-esc-sg
  VpcId:
    Type: AWS::EC2::VPC::Id
  AlbSecurityGroupName:
    Type: String
    Default: test-alb-sg
  ECSTaskDesiredCount:
    Type: Number
    Default: 1
  ContainerName: 
    Type: String
    Default: test
  ECSServiceName:
    Type: String
    Default: test
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>


Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties: 
      ClusterName: !Ref ClusterName
      # Tags: 
      #   - Tag

  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: !Ref AlbSecurityGroupName
      GroupDescription: Security Group for ALB
      # SecurityGroupEgress: 
      #   - IpProtocol: tcp
      #     CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: !Ref Port
          ToPort: !Ref ECSContainerPort
          IpProtocol: tcp
      # Tags: 
      #   - Tag
      VpcId: !Ref VpcId

  Alb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      # IpAddressType: ipv4
      LoadBalancerAttributes:
      #   - Key: access_logs.s3.enabled
      #     Value: false
      #   - Key: access_logs.s3.bucket
      #     Value: 
      #   - Key: access_logs.s3.prefix
      #     Value: 
      #   - Key: deletion_protection.enabled
      #     Value: false
      #   - Key: idle_timeout.timeout_seconds
      #     Value: 60
        - Key: routing.http2.enabled
          Value: true
      Name: !Ref AlbName
      Scheme: !Ref AlbScheme
      SecurityGroups: 
        - !GetAtt AlbSecurityGroup.GroupId
      # SubnetMappings:
      #   - AllocationId:  
      #     SubnetId: 
      Subnets: !Ref Subnets
      # Tags: 
      #   - Tag

  AlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: 
      - AlbTargetGroup
      - Alb
    Properties: 
      # Certificates: 
      #   - 
      DefaultActions: 
        # - AuthenticateCognitoConfig: 
        #     AuthenticateCognitoConfig
        #   Type: authenticate-cognito
        #   Order: 1
        # - AuthenticateOidcConfig: 
        #     authenticate-oidc
        #   Type: forward
        #   Order: 1
        # - FixedResponseConfig: 
        #     fixed-response
        #   Type: forward
        #   Order: 1
        # - RedirectConfig: 
        #     RedirectConfig
        #   Type: redirect
        #   Order: 1
        - TargetGroupArn: !Ref AlbTargetGroup
          Type: forward
          # Order: 1
      LoadBalancerArn: !Ref Alb
      Port: !Ref Port
      Protocol: !Ref Protocol
      # SslPolicy: String

  AlbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: 
      - Alb
    Properties: 
      # HealthCheckEnabled: Boolean
      # HealthCheckIntervalSeconds: Integer
      # HealthCheckPath: String
      # HealthCheckPort: String
      # HealthCheckProtocol: String
      # HealthCheckTimeoutSeconds: Integer
      # HealthyThresholdCount: Integer
      # Matcher: 
      #   Matcher
      Name: !Ref AlbTargetGroupName
      Port: !Ref Port
      Protocol: !Ref Protocol
      # Tags: 
      #   - Tag
      # TargetGroupAttributes: 
      #   - Key: slow_start.duration_seconds
      #     Value: 
      #   - Key: stickiness.enabled
      #     Value: false
      #   - Key: stickiness.type
      #     Value: false
      #   - Key: stickiness.lb_cookie.duration_seconds
      #     Value: 86400 
      # Targets: 
      #   - AvailabilityZone:
      #     Id: 
      #     Port: !Ref Port
      TargetType: ip
      # UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId

  # AlbListnerRule:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties: 
  #     Actions: 
  #       - Action
  #     Conditions: 
  #       - RuleCondition
  #     ListenerArn: String
  #     Priority: !Ref AlbListener

  ECSLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/ecs/logs/${ECSLogGroupName}"
  
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ECSTaskExecutionRoleName
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: log-access-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutDestination
                  - logs:PutDestinationPolicy
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:DescribeMetricFilters
                  - logs:DescribeSubscriptionFilters
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                Effect: Allow
                Resource: '*'
              
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ECSTaskRoleName
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: log-access-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: '*'
        - PolicyName: ecs-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Action:
                  - 'ecs:*'
                  - 'ecr:*'
                Effect: Allow
                Resource: '*'
              
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions: 
        - Image: !Ref ECSImageName
          Name: !Ref ContainerName
          PortMappings:
            - ContainerPort: !Ref ECSContainerPort
              HostPort: !Ref ECSContainerPort
              Protocol: http
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref 'AWS::Region'
              awslogs-group: !Sub "/ecs/logs/${ECSLogGroupName}"
              awslogs-stream-prefix: !Ref ECSServiceName
      Cpu: !Ref ECSTaskCPUUnit
      Memory: !Ref ECSTaskMemory
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      Family: !Ref ECSTaskFamily
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: 
      - AlbListener
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: !Ref ECSTaskDesiredCount
      LaunchType: FARGATE
      LoadBalancers:
        - TargetGroupArn: !Ref AlbTargetGroup
          ContainerPort: !Ref ECSContainerPort
          ContainerName: !Ref ContainerName
      NetworkConfiguration:
       AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref ECSServiceSecurityGroup
          Subnets: !Ref Subnets
      ServiceName: !Ref ECSServiceName
      TaskDefinition: !Ref ECSTaskDefinition

  ECSServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security Group for ECS Service
      GroupName: !Ref ECSServiceSecurityGroupName
      # SecurityGroupEgress: 
      #   - IpProtocol: tcp
      #     CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
        - SourceSecurityGroupId: !GetAtt AlbSecurityGroup.GroupId
          IpProtocol: tcp
          FromPort: !Ref ECSContainerPort
          ToPort: !Ref ECSContainerPort
      # Tags: 
      #   - Tag
      VpcId: !Ref VpcId

