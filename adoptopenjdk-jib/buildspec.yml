version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
      python: 3.8
    
    commands:
      - echo ${JAVA_URL}
      - CUR=$(pwd)
      - curl -Lso /tmp/openjdk.tar.gz ${JAVA_URL}
      - sha256sum /tmp/openjdk.tar.gz
      - mkdir -p ${JAVA_HOME}
      - cd ${JAVA_HOME}
      - echo "${JDK_ESUM}  /tmp/openjdk.tar.gz" | sha256sum -c -
      - tar -xf /tmp/openjdk.tar.gz
      - mv ${JAVA_HOME}/jdk-${JAVA_MAJOR_MINOR_REVISION}+${JAVA_BUILD_NUMBER}/* ${JAVA_HOME}
      - |
        for tool_path in ${JAVA_HOME}/bin/*; do \
          tool=`basename ${tool_path}` && \
          update-alternatives --install /usr/bin/${tool} ${tool} ${tool_path} 10000 && \
          update-alternatives --set ${tool} ${tool_path}; \
        done
      - cd $CUR

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})

  build: 
    commands:
      - echo Build started on `date`
      - cd ${CODEBUILD_SRC_DIR_AppSource}
      - echo "Build base image"
      - docker build --rm -f docker/Dockerfile -t docker-java-mecab:latest .
      - echo "Build image"
      - ./gradlew jibDockerBuild
      - echo Building the Docker image...
      - export TAG="$(./gradlew app:properties | grep version | cut -d ' ' -f2)"
      - echo ${TAG}
      - IMAGE="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
      - export IMAGE_NAME="${IMAGE}:${TAG}"
      - echo -n "${IMAGE_NAME}"
      - docker tag mecab-java-api-server:latest ${IMAGE_NAME}

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${IMAGE_NAME}
      - cd $CUR
      - echo ${TAG} > version.txt

artifacts:
  files:
    - version.txt

cache:
  paths:
    - /root/.gradle
