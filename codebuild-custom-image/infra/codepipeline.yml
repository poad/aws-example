AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Repo:
    Type: String
    Default: aws-example
  Owner:
    Type: String
    Default: poad
  Branch:
    Type: String
    Default: master
  OAuthToken:
    NoEcho: true
    Type: String
  DockerImageName:
    Type: String
    Default: codebuild-custom-image

Resources:
  ImageCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        -
          Action: 
            - sts:AssumeRole
          Effect: Allow
          Principal:
            Service: 
              - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Action:
                  - s3:PutObject
                  - s3:GetBucketPolicy
                  - s3:GetObject
                  - s3:ListBucket
                Effect: Allow
                Resource: '*'
              - 
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
              -
                Action:
                  - ecr:CreateRepository
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Effect: Allow
                Resource: '*'

  ECRRepogitory:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: !Ref DockerImageName
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: CodeBuildAccess
            Effect: Allow
            Principal: 
              Service: 
                - "codebuild.amazonaws.com"
            Action: 
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"

  ImageBuildCodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties: 
      Name: !Sub '${DockerImageName}-codebuild-docker-build-${AWS::AccountId}'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL 
        Image: 'aws/codebuild/standard:3.0'
        PrivilegedMode: true
        EnvironmentVariables:
          -
            Name: AWS_DEFAULT_REGION
            Value: !Ref 'AWS::Region'
          -
            Name: AWS_ACCOUNT_ID
            Value: !Ref 'AWS::AccountId'
          -
            Name: IMAGE_REPO_NAME
            Value: !Ref DockerImageName
      ServiceRole: !GetAtt ImageCodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: codebuild-custom-image/image-build/buildspec.yml

  AppBuildCodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties: 
      Name: !Sub '${DockerImageName}-app-build-${AWS::AccountId}'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL 
        Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${DockerImageName}:latest'
        EnvironmentVariables:
          -
            Name: AWS_DEFAULT_REGION
            Value: !Ref 'AWS::Region'
          -
            Name: AWS_ACCOUNT_ID
            Value: !Ref 'AWS::AccountId'
      ServiceRole: !GetAtt AppCodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: codebuild-custom-image/app-build/buildspec.yml

  AppCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        -
          Action: 
            - sts:AssumeRole
          Effect: Allow
          Principal:
            Service: 
              - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Action:
                  - s3:PutObject
                  - s3:GetBucketPolicy
                  - s3:GetObject
                  - s3:ListBucket
                Effect: Allow
                Resource: '*'
              - 
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
              -
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                Effect: Allow
                Resource: '*'

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: 
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service: 
             - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Effect: Allow
                Resource: '*'
              -
                Action:
                  - s3:PutObject
                Effect: Allow
                Resource: 
                  - "arn:aws:s3:::*"
              -
                Action:
                  - codepipeline:*
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:ListRoles
                  - iam:PassRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:CreatePolicy
                  - iam:DeletePolicy
                  - cloudformation:Describe*
                  - cloudFormation:List*
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                Effect: Allow
                Resource: '*'
              -
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Effect: Allow
                Resource: '*'

  DockerBuildCodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub '${DockerImageName}-deploy'
      ArtifactStore: 
        Location: !Sub 'codepipeline-artifact-store-${AWS::Region}-${AWS::AccountId}'
        Type: S3
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions: 
            -
              Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              InputArtifacts: []
              OutputArtifacts:
                - Name: DockerSource
              Configuration:
                Owner: !Ref Owner
                Repo: !Ref Repo
                Branch: !Ref Branch
                OAuthToken: !Ref OAuthToken
              RunOrder: 1
        -
          Name: BuildImage
          Actions:
            - 
              Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: DockerSource
              Configuration:
                ProjectName: !Ref ImageBuildCodeBuildProject
              RunOrder: 1
        -
          Name: BuildApp
          Actions:
            - 
              Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: DockerSource
              Configuration:
                ProjectName: !Ref AppBuildCodeBuildProject
              RunOrder: 1
