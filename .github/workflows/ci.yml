# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
#  push:
#    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        target: [ ./codebuild/custom-image-test, ./lambda/cognito-console, ./lambda/cognito-lambda, ./lambda/docker-lambda, ./lambda/python ]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i -g yarn aws-cdk typescript
    - run: |
        cd ${{ matrix.target }} && \
        yarn install && \
        yarn build

  build-client:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle (lambda/cognito-console/client/DeviceFlowExample)
      env:
        OAUTH_CLIENT_ID: ${{ secrets.AUTH0_APP_CLIENT_ID }}
        AUTH0_FQDN: ${{ secrets.AUTH0_APP_FQDN }}
      run: |
        cd lambda/cognito-console/client/DeviceFlowExample
        mkdir -p app/src/main/res/raw
        mv oauth.properties.template app/src/main/res/raw/oauth.properties
        chmod +x gradlew
        ./gradlew build
