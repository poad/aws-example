AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  CodePipelineBucket:
    Type: String
    Default: codepipeline-us-east-1-653810325336
  Repo:
    Type: String
    Default: aws-example
  Owner:
    Type: String
  Branch:
    Type: String
    Default: master
  OAuthToken:
    NoEcho: true
    Type: String
  LambdaStackName:
    Type: String
  LambdaFunctionName:
    Type: String
  PipelineName:
    Type: String

Resources:
  LambdaCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        -
          Action: 
            - sts:AssumeRole
          Effect: Allow
          Principal:
            Service: 
              - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Action:
                  - s3:PutObject
                  - s3:GetBucketPolicy
                  - s3:GetObject
                  - s3:ListBucket
                Effect: Allow
                Resource: '*'
              - 
                Action:
                  - lambda:UpdateFunctionCode
                Effect: Allow
                Resource: !Join [ ":", [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'function', '*' ] ]
              - 
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
                

  LambdaCodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties: 
      Name: !Join [ "-", [ lambda, !Ref 'AWS::AccountId' ] ]
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL 
        Image: 'aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0'
      ServiceRole: !GetAtt LambdaCodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE

  LambdaCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: 
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service: 
             - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Effect: Allow
                Resource: '*'
              -
                Action:
                  - s3:PutObject
                Effect: Allow
                Resource: 
                  - "arn:aws:s3:::*"
              -
                Action:
                  - codepipeline:*
                  - iam:ListRoles
                  - iam:PassRole
                  - cloudformation:Describe*
                  - cloudFormation:List*
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                Effect: Allow
                Resource: '*'
              -
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Effect: Allow
                Resource: '*'

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: 
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service: 
             - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Effect: Allow
                Resource: '*'
              -
                Action:
                  - cloudformation:Describe*
                  - cloudFormation:List*
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                Effect: Allow
                Resource: '*'

  LambdaBuildCodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Ref PipelineName
      ArtifactStore: 
        Location: !Ref CodePipelineBucket
        Type: S3
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt LambdaCodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions: 
            -
              Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              InputArtifacts: []
              OutputArtifacts:
                - Name: LambdaSource
              Configuration:
                Owner: !Ref Owner
                Repo: !Ref Repo
                Branch: !Ref Branch
                OAuthToken: !Ref OAuthToken
              RunOrder: 1
        -
          Name: Build
          Actions:
            - 
              Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: LambdaSource
              OutputArtifacts:
                - Name: BuildResult
              Configuration:
                ProjectName: !Ref LambdaCodeBuildProject
              RunOrder: 1
        -
          Name: Deploy
          Actions:
            - 
              Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildResult
              OutputArtifacts:
                - Name: LambdaStackResult
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: lambda-change-set
                StackName: !Ref LambdaStackName
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: "BuildResult::package-template.yml"
                Capabilities: CAPABILITY_IAM
                OutputFileName: CreateChangeSetOutput.json
                ParameterOverrides: !Sub |
                    {
                      "FunctionName": "${LambdaFunctionName}"
                    }
              RunOrder: 1
            - 
              Name: ApplyChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildResult
              OutputArtifacts: []
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: lambda-change-set
                StackName: !Ref LambdaStackName
                RoleArn: !GetAtt CloudFormationRole.Arn
                Capabilities: CAPABILITY_IAM
              RunOrder: 2


