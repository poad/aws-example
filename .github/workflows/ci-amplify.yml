# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI (amplify)

on:
  push:
    branches: [ main ]
    paths:
      - 'amplify/amplified_todo'
  pull_request_target:
    branches: [ main ]
    paths:
      - 'amplify/amplified_todo'

  workflow_dispatch:

permissions:
  actions: read
  checks: write
  contents: write
  deployments: none
  id-token: write
  issues: none
  packages: none
  pull-requests: write
  repository-projects: read
  security-events: write
  statuses: write

jobs:
  build-on-mac:
    runs-on: macos-11

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          architecture: x64
      
      - name: generate dummy aws-exports.js
        working-directory: amplify/amplified_todo/src
        run: |
          touch aws-exports.js
          cat <<- EOF > aws-exports.js
          const awsmobile = {
              "aws_project_region": "us-west-2",
              "aws_appsync_graphqlEndpoint": "",
              "aws_appsync_region": "us-west-2",
              "aws_appsync_authenticationType": "API_KEY",
              "aws_appsync_apiKey": ""
          };
          
          export default awsmobile;
          EOS

      - name: Install node modules
        working-directory: amplify/amplified_todo/
        run: yarn install

      - name: Set Xcode version
        run: sudo xcode-select -s "/Applications/Xcode_13.2.1.app"

      - name: Show Xcode version
        run: xcodebuild -version
      - name: Configure Homebrew cache
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew/foo--*
            ~/Library/Caches/Homebrew/downloads/*--foo-*
          key: brew-${{ hashFiles('.github/brew-formulae') }}
          restore-keys: brew-

      - name: Add '--no-document' to gemrc
        run: |
          echo "install: --no-document" >> ~/.gemrc
          echo "update: --no-document" >> ~/.gemrc

      - name: Update Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update --preinstall
          cat "$(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula/watchman.rb" > .github/brew-formulae
          sudo rm '/usr/local/bin/2to3'
          brew link --overwrite python@3.9
          brew upgrade

      - name: Setup watchman
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
        run: |
          brew install watchman
          sudo gem update

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Cache Pods dependencies
        uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache Xcode archive
        uses: actions/cache@v3
        with:
          path: amplify/amplified_todo/ios/Pods
          key: ${{ runner.OS }}-archive-cache-${{ hashFiles('**/ios/amplified_todo.xcarchive') }}
          restore-keys: |
            ${{ runner.OS }}-archive-cache-

      - name: pods install
        env:
          RCT_NO_LAUNCH_PACKAGER: 1
        working-directory: amplify/amplified_todo/ios
        run: rm -rf Podfile.lock Pods && sudo gem install cocoapods && pod install

      - name: iOS app build (without export)
        if: github.actor == 'dependabot[bot]'
        env:
          RCT_NO_LAUNCH_PACKAGER: 1
        uses: devbotsxyz/xcode-build@v1
        with:
          workspace: amplify/amplified_todo/ios/amplified_todo.xcworkspace
          scheme: amplified_todo

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Build and test for android
        working-directory: amplify/amplified_todo/android
        run: ./gradlew assembleDebug test
